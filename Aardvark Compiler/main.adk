include Lexer from Lexer
include Parser from Parser
include Errors
stdout.write('Loaded.\n')
testStr1 = `
y = 2
x = 54.78y
stdout.write("Hello World\\"test", '\n')
$"Hello"
#Single line
#*
Multiline
*#
#include x
#function x() {
#  return 8
#}
`
testStr2 = `stdout.write($"string{hello}\n")`
testStr3 = `16_fff`
stdout.write('Lexing....\n')


code = '     12.23'#testStr2
errorHandler = Errors.ErrorHandler(code, '<main>')
lexer = Lexer(false, false, errorHandler)
toks = lexer.tokenize(code)
stdout.write(toks, '\n')
for tok in toks {
  stdout.write(tok, '\n')
}

# stdout.write(prettify(toks), '\n')
stdout.write('Parsing...')
parser = Parser(null, lexer)
data = parser.parse()
stdout.write(data, '\n')
open('out.txt', 'w').write(String(data))
# stdout.write(prettify(data), '\n')
