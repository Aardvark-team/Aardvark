#*
BAD DESIGN!!
Delete this file.
*#

include random

class Code as this {
    let String code
    let Object ast_node
    $constructor(code, ast_node) {
        this.code = code
        this.ast_node = ast_node
    }
}
let numbers = "0123456789"
let valid_name_start_characters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZאבגדהוזחטיךלמםנןסעףפץצקרשת"
let valid_name_characters = valid_name_start_characters + numbers + "_"
let maximum_name_length = 20
let maximum_string_length = 100
let maximum_number_length = 10
let string_characters = valid_name_characters + "\\\t\n\r\\n*)([{}]|-=+~!@#$%^&*()<>?,./;:"



function generate_string() {
    let content = "".join(random.choose(string_characters) for i in sequence(0, 1, random.random_integer(0, maximum_string_length)))
    let quote = random.choose(["'", "\"", "`"])
    return quote + content + quote
}
let values = [
    generate_string, 
    function() "".join(random.choose(numbers) for i in sequence(0, 1, random.random_integer(0, maximum_number_length))),
    function() random.choose(["true", "false"]), 
    function "null"
]
function generate_identifier(can_be_property=true) {
    #*A 1/3 chance of a property*#
    if (random.random_integer(0, 2) == 0 if can_be_property else false)
        return generate_identifier(false) + "." + generate_identifier(true)
    else
        return random.choose(valid_name_start_characters) + "".join(random.choose(valid_name_characters) for i in sequence(0, 1, random.random_integer(0, maximum_name_length)))
}
function generate_value()
    random.choose([generate_identifier, generate_array, generate_object] if random.random_integer(0, 3) == 0 else values)()

function generate_array() {

}
function generate_function_call() {

}
function generate_expression() {

}
function generate_scope() {

}
stdout.log(generate_identifier(true), random.choose(values)())