TokenTypes = set{
  'String',
  'Number',
  'Keyword',
  'Operator',
  'Identifier',
  'Delimiter',
  'Indent',
  'Comment',
  'LineBreak',
  'Boolean'
} # set

Booleans = set{'true', 'false'}

Operators = set{
  "=",   # equals
  "!",   # not,
  '~',   # about
  "<",   # less than
  ">",   # more than
  "==",  # equals
  "<=",  # less than or equal to
  ">=",  # more than or equal to
  "!=",  # not equal to
  "~=",  # about equal to
  "&",   # and
  "|",   # or
  "x|",  # xor (exculsive or)
  "+",   # add
  "-",   # subtract
  "/",   # divide
  "*",   # multiplication
  "^",   # exponet 
  "%",   # mod
  "@",   # at. reference
  "?",   # x.y? will be null if x.y doesn't exist or if it is null
  "->",  # Return Type,
  "not", # not
  "and", # and
  "or",  # or
  "xor", # xor
  "in",  # in
  '$' #special functions
}

OrderOfOps = {
  0: ['?'],
  1: ['~', '!', '@'],
  2: ['^'],
  3: ['*', '/'],
  4: ['-', '+'],
  5: ['%'],
  6: ['=', '~=', '<', '>', '<=', '>=', '!=', 'in', '=='],
  7: ['&', '|', 'x|', 'and', 'or', 'xor'],
  8: ['->'],
  9: [],
  10: [],
  11: [],
  12: [],
  13: []
}

Whitespaces = set{
    ' ',  # Space
    '\t', # Tab
    '​',  # zero width space
    ' ',  # hair space
    ' ',  # six per em space
    ' ',  # thin space
    ' ',  # punctuation space
    ' ',  # four per em space
    ' ',  # three per em space
    ' ',  # figure space
    ' ',  # en space
    ' ',  # em space
    '⠀'  # braile blank
}

Delimiters = set{
    ":",  # Colon, used for defining blocks and for types
    "(",  # lparen
    ")",  # rparen
    ",",  # comma
    "{",  # lbrace
    "}",  # rbrace
    "[",  # lbracket
    "]",  # rbracket
    "."  # period
}

Keywords = set{
    'class',
    'extends',
    'type',
    'extending',
    'function',
    'for',
    'while',
    'switch',
    'case',
    'if',
    'else',  # Blocks
    'return',
    'delete',
    'static',
    'include',
    'async',
    'yield',  
    #'let', # Statements
    'as',
    'from' # other
}